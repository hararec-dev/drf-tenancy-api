# Generated by Django 5.2.3 on 2025-06-30 08:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "actor_type",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("system", "System"),
                            ("api_key", "API Key"),
                        ],
                        default="user",
                        help_text="Distinguishes if the actor was a user, a system process, or an API Key.",
                        max_length=255,
                        verbose_name="actor type",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        help_text="E.g., 'user.login', 'invoice.created'",
                        max_length=255,
                        verbose_name="action",
                    ),
                ),
                (
                    "target_object_id",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="object ID"),
                ),
                (
                    "details",
                    models.JSONField(blank=True, null=True, verbose_name="details"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(blank=True, null=True, verbose_name="IP address"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "data_before",
                    models.JSONField(
                        blank=True,
                        help_text="Object state (JSON) before the change (for UPDATE and DELETE).",
                        null=True,
                        verbose_name="data before",
                    ),
                ),
                (
                    "data_after",
                    models.JSONField(
                        blank=True,
                        help_text="Object state (JSON) after the change (for CREATE and UPDATE).",
                        null=True,
                        verbose_name="data after",
                    ),
                ),
                (
                    "trace_id",
                    models.CharField(
                        blank=True,
                        help_text="Correlation ID to track a chain of events across microservices or processes.",
                        max_length=255,
                        null=True,
                        verbose_name="trace ID",
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True,
                        help_text="A field for the user or system to explain the reason for the change.",
                        null=True,
                        verbose_name="reason",
                    ),
                ),
                (
                    "changed_fields",
                    models.JSONField(
                        blank=True,
                        help_text="Fields that were changed (for UPDATE operations).",
                        null=True,
                        verbose_name="changed fields",
                    ),
                ),
                (
                    "context",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context for the action.",
                        null=True,
                        verbose_name="context",
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="user agent"),
                ),
                (
                    "request_id",
                    models.CharField(
                        blank=True,
                        help_text="Request ID for tracing.",
                        max_length=255,
                        null=True,
                        verbose_name="request ID",
                    ),
                ),
                (
                    "checksum",
                    models.BinaryField(
                        blank=True,
                        help_text="Checksum for data integrity.",
                        null=True,
                        verbose_name="checksum",
                    ),
                ),
            ],
            options={
                "verbose_name": "audit log",
                "verbose_name_plural": "audit logs",
                "db_table": "audit_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AuditMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity_used", models.BigIntegerField(verbose_name="quantity used")),
                (
                    "measured_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="measured at"),
                ),
            ],
            options={
                "verbose_name": "audit metric",
                "verbose_name_plural": "audit metrics",
                "db_table": "audit_metrics",
            },
        ),
        migrations.CreateModel(
            name="MetadataAudit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "table_name",
                    models.CharField(max_length=255, verbose_name="table name"),
                ),
                (
                    "record_id",
                    models.CharField(
                        help_text="Supports non-integer primary keys.",
                        max_length=255,
                        verbose_name="record ID",
                    ),
                ),
                (
                    "operation",
                    models.CharField(
                        choices=[
                            ("INSERT", "Insert"),
                            ("UPDATE", "Update"),
                            ("DELETE", "Delete"),
                        ],
                        max_length=10,
                        verbose_name="operation",
                    ),
                ),
                (
                    "before_state",
                    models.JSONField(blank=True, null=True, verbose_name="before state"),
                ),
                (
                    "after_state",
                    models.JSONField(blank=True, null=True, verbose_name="after state"),
                ),
                (
                    "changed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="changed at"),
                ),
            ],
            options={
                "verbose_name": "metadata audit",
                "verbose_name_plural": "metadata audits",
                "db_table": "metadata_audit",
            },
        ),
        migrations.CreateModel(
            name="SensitiveAccessLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "accessed_table",
                    models.CharField(max_length=255, verbose_name="accessed table"),
                ),
                (
                    "accessed_key",
                    models.CharField(max_length=255, verbose_name="accessed key"),
                ),
                (
                    "accessed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="accessed at"),
                ),
                (
                    "query_params",
                    models.JSONField(blank=True, null=True, verbose_name="query params"),
                ),
            ],
            options={
                "verbose_name": "sensitive access log",
                "verbose_name_plural": "sensitive access logs",
                "db_table": "sensitive_access_logs",
            },
        ),
        migrations.CreateModel(
            name="AuditLogSignature",
            fields=[
                (
                    "audit_log",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="audit.auditlog",
                        verbose_name="audit log",
                    ),
                ),
                ("signature", models.BinaryField(verbose_name="signature")),
                (
                    "signed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="signed at"),
                ),
            ],
            options={
                "verbose_name": "audit log signature",
                "verbose_name_plural": "audit log signatures",
                "db_table": "audit_log_signatures",
            },
        ),
    ]
