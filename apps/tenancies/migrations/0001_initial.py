# Generated by Django 5.2.3 on 2025-06-30 08:46

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(null=True, verbose_name="deleted at"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "slug",
                    models.SlugField(
                        help_text="Unique URL identifier, e.g. 'my-company'",
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "domain",
                    models.CharField(
                        blank=True,
                        help_text="Custom domain for the tenant",
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="domain",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("suspended", "Suspended"),
                            ("deleted", "Deleted"),
                            ("pending_setup", "Pending setup"),
                            ("trial", "Trial"),
                        ],
                        default="pending_setup",
                        max_length=50,
                        verbose_name="status",
                    ),
                ),
                (
                    "onboarding_completed_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="onboarding completed at"),
                ),
                (
                    "available_credits",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="available credits",
                    ),
                ),
                (
                    "billing_strategy",
                    models.CharField(
                        default="subscription",
                        max_length=50,
                        verbose_name="billing strategy",
                    ),
                ),
                (
                    "data_retention_policy",
                    models.JSONField(blank=True, null=True, verbose_name="data retention policy"),
                ),
                (
                    "parent_tenant",
                    models.ForeignKey(
                        blank=True,
                        help_text="For hierarchical structures (resellers, etc.)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tenancies.tenant",
                        verbose_name="parent tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "tenant",
                "verbose_name_plural": "tenants",
                "db_table": "tenants",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TenantAuditPolicy",
            fields=[
                (
                    "tenant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="tenancies.tenant",
                        verbose_name="tenant",
                    ),
                ),
                (
                    "log_retention_days",
                    models.IntegerField(default=365, verbose_name="log retention days"),
                ),
                (
                    "require_log_signatures",
                    models.BooleanField(default=False, verbose_name="require log signatures"),
                ),
                (
                    "sensitive_tables",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(),
                        blank=True,
                        default=list,
                        help_text="Tables that are logged in sensitive_access_logs.",
                        size=None,
                        verbose_name="sensitive tables",
                    ),
                ),
            ],
            options={
                "verbose_name": "tenant audit policy",
                "verbose_name_plural": "tenant audit policies",
                "db_table": "tenant_audit_policies",
            },
        ),
        migrations.CreateModel(
            name="TenantConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "data_residency_region",
                    models.CharField(
                        default="us-east-1",
                        max_length=50,
                        verbose_name="data residency region",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(default="UTC", max_length=50, verbose_name="timezone"),
                ),
                (
                    "locale",
                    models.CharField(default="en-US", max_length=10, verbose_name="locale"),
                ),
                (
                    "branding",
                    models.JSONField(
                        default=dict,
                        help_text="Container for tenant branding.",
                        verbose_name="branding",
                    ),
                ),
                (
                    "settings",
                    models.JSONField(
                        default=dict,
                        help_text="Container for various tenant-specific settings.",
                        verbose_name="settings",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tenancies.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "tenant configuration",
                "verbose_name_plural": "tenant configurations",
                "db_table": "tenant_configurations",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(null=True, verbose_name="deleted at"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="contact email",
                    ),
                ),
                (
                    "legal_name",
                    models.CharField(blank=True, max_length=200, null=True, verbose_name="legal name"),
                ),
                (
                    "parent_department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tenancies.department",
                        verbose_name="parent department",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tenancies.tenant",
                        verbose_name="tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "department",
                "verbose_name_plural": "departments",
                "db_table": "departments",
                "indexes": [models.Index(fields=["tenant"], name="idx_departments_tenant_id")],
                "unique_together": {("tenant", "name")},
            },
        ),
    ]
