# Generated by Django 5.2.3 on 2025-06-30 08:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("tenancies", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=100, unique=True, verbose_name="code"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("percentage", "Percentage"),
                            ("fixed_amount", "Fixed Amount"),
                        ],
                        max_length=20,
                        verbose_name="discount type",
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="discount value"
                    ),
                ),
                (
                    "duration",
                    models.CharField(
                        choices=[
                            ("once", "Once"),
                            ("repeating", "Repeating"),
                            ("forever", "Forever"),
                        ],
                        max_length=20,
                        verbose_name="duration",
                    ),
                ),
                (
                    "duration_in_months",
                    models.IntegerField(
                        blank=True,
                        help_text='Only applicable if duration is "repeating"',
                        null=True,
                        verbose_name="duration in months",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "max_redemptions",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum number of times this coupon can be used in total",
                        null=True,
                        verbose_name="max redemptions",
                    ),
                ),
                (
                    "redeem_by",
                    models.DateTimeField(
                        blank=True,
                        help_text="Expiration date of the coupon",
                        null=True,
                        verbose_name="redeem by",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
            ],
            options={
                "verbose_name": "coupon",
                "verbose_name_plural": "coupons",
                "db_table": "coupons",
            },
        ),
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codename",
                    models.CharField(
                        help_text="e.g., 'max_users', 'api_access'",
                        max_length=100,
                        unique=True,
                        verbose_name="codename",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("limit", "Limit"),
                            ("boolean", "Boolean"),
                            ("metered", "Metered"),
                        ],
                        max_length=50,
                        verbose_name="type",
                    ),
                ),
                (
                    "value_type",
                    models.CharField(
                        choices=[
                            ("boolean", "Boolean"),
                            ("integer", "Integer"),
                            ("text", "Text"),
                        ],
                        default="boolean",
                        help_text="Defines how to interpret the value in plan_features: boolean (on/off), integer (limit), text (specific value).",
                        max_length=20,
                        verbose_name="value type",
                    ),
                ),
            ],
            options={
                "verbose_name": "feature",
                "verbose_name_plural": "features",
                "db_table": "features",
            },
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(null=True, verbose_name="deleted at"),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
            ],
            options={
                "verbose_name": "plan",
                "verbose_name_plural": "plans",
                "db_table": "plans",
            },
        ),
        migrations.CreateModel(
            name="PlanVersionHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "changeset",
                    models.JSONField(
                        help_text="Details of changes (name, description, etc.)",
                        verbose_name="changeset",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
            ],
            options={
                "verbose_name": "plan version history",
                "verbose_name_plural": "plan version histories",
                "db_table": "plan_version_history",
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("pending", "Pending"),
                            ("canceled", "Canceled"),
                            ("expired", "Expired"),
                            ("trialing", "Trialing"),
                        ],
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "trial_ends_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="trial ends at"
                    ),
                ),
                (
                    "current_period_starts_at",
                    models.DateTimeField(verbose_name="current period starts at"),
                ),
                (
                    "current_period_ends_at",
                    models.DateTimeField(verbose_name="current period ends at"),
                ),
                (
                    "cancel_at_period_end",
                    models.BooleanField(
                        default=False, verbose_name="cancel at period end"
                    ),
                ),
            ],
            options={
                "verbose_name": "subscription",
                "verbose_name_plural": "subscriptions",
                "db_table": "subscriptions",
            },
        ),
        migrations.CreateModel(
            name="SubscriptionDiscount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "redeemed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="redeemed at"),
                ),
            ],
            options={
                "verbose_name": "subscription discount",
                "verbose_name_plural": "subscription discounts",
                "db_table": "subscription_discounts",
            },
        ),
        migrations.CreateModel(
            name="SubscriptionEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("upgrade", "Upgrade"),
                            ("downgrade", "Downgrade"),
                            ("cancel", "Cancel"),
                            ("renewal", "Renewal"),
                        ],
                        max_length=50,
                        verbose_name="event type",
                    ),
                ),
                ("event_data", models.JSONField(verbose_name="event data")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
            ],
            options={
                "verbose_name": "subscription event",
                "verbose_name_plural": "subscription events",
                "db_table": "subscription_events",
            },
        ),
        migrations.CreateModel(
            name="CreditLedger",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("purchase", "Purchase"),
                            ("usage_deduction", "Usage Deduction"),
                            ("refund", "Refund"),
                            ("adjustment", "Adjustment"),
                        ],
                        max_length=50,
                        verbose_name="transaction type",
                    ),
                ),
                (
                    "amount",
                    models.BigIntegerField(
                        help_text="Positive for purchases/credits, negative for consumption/deductions.",
                        verbose_name="amount",
                    ),
                ),
                (
                    "balance_after",
                    models.BigIntegerField(
                        help_text="The resulting balance after this transaction",
                        verbose_name="balance after",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "invoice_line_item_id",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Optional: link to the invoice line where credits were purchased/used",
                        null=True,
                        verbose_name="invoice line item ID",
                    ),
                ),
                (
                    "actor_id",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Optional: The user or system that generated the transaction",
                        null=True,
                        verbose_name="actor ID",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credit_transactions",
                        to="tenancies.tenant",
                        verbose_name="tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "credit transaction",
                "verbose_name_plural": "credit transactions",
                "db_table": "credit_ledger",
            },
        ),
        migrations.CreateModel(
            name="PlanFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="Feature value for this plan (e.g., '100', 'true')",
                        max_length=255,
                        verbose_name="value",
                    ),
                ),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.feature",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="business.plan"
                    ),
                ),
            ],
            options={
                "db_table": "plan_features",
            },
        ),
        migrations.AddField(
            model_name="plan",
            name="features",
            field=models.ManyToManyField(
                through="business.PlanFeature",
                to="business.feature",
                verbose_name="features",
            ),
        ),
        migrations.CreateModel(
            name="PlanPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(null=True, verbose_name="deleted at"),
                ),
                (
                    "billing_period",
                    models.CharField(
                        choices=[("monthly", "Monthly"), ("annual", "Annual")],
                        max_length=20,
                        verbose_name="billing period",
                    ),
                ),
                (
                    "price_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="amount"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="business.plan",
                        verbose_name="plan",
                    ),
                ),
            ],
            options={
                "verbose_name": "plan price",
                "verbose_name_plural": "plan prices",
                "db_table": "plan_prices",
            },
        ),
        migrations.CreateModel(
            name="FeatureTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "up_to",
                    models.IntegerField(
                        help_text="The accumulated usage up to this point. The last tier can have an infinite or very large value.",
                        verbose_name="up to",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=6, max_digits=12, verbose_name="unit price"
                    ),
                ),
                (
                    "flat_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="flat fee",
                    ),
                ),
                ("currency", models.CharField(max_length=3, verbose_name="currency")),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.feature",
                        verbose_name="feature",
                    ),
                ),
                (
                    "plan_price",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.planprice",
                        verbose_name="plan price",
                    ),
                ),
            ],
            options={
                "verbose_name": "feature tier",
                "verbose_name_plural": "feature tiers",
                "db_table": "feature_tiers",
            },
        ),
    ]
